/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.example;

public class ffi_lib {
  public static vec2 my_function(vec2 input) {
    return new vec2(ffi_libJNI.my_function(vec2.getCPtr(input), input), true);
  }

  public static vec3 vec3_new(SWIGTYPE_p_int32_t x, SWIGTYPE_p_int32_t y, SWIGTYPE_p_int32_t z) {
    long cPtr = ffi_libJNI.vec3_new(SWIGTYPE_p_int32_t.getCPtr(x), SWIGTYPE_p_int32_t.getCPtr(y), SWIGTYPE_p_int32_t.getCPtr(z));
    return (cPtr == 0) ? null : new vec3(cPtr, false);
  }

  public static SWIGTYPE_p_int32_t add(vec3 slf, SWIGTYPE_p_int32_t x, SWIGTYPE_p_int32_t y, SWIGTYPE_p_int32_t z) {
    return new SWIGTYPE_p_int32_t(ffi_libJNI.add(vec3.getCPtr(slf), slf, SWIGTYPE_p_int32_t.getCPtr(x), SWIGTYPE_p_int32_t.getCPtr(y), SWIGTYPE_p_int32_t.getCPtr(z)), true);
  }

  public static SWIGTYPE_p_int32_t add_reverse_args(SWIGTYPE_p_int32_t x, SWIGTYPE_p_int32_t y, SWIGTYPE_p_int32_t z, vec3 slf) {
    return new SWIGTYPE_p_int32_t(ffi_libJNI.add_reverse_args(SWIGTYPE_p_int32_t.getCPtr(x), SWIGTYPE_p_int32_t.getCPtr(y), SWIGTYPE_p_int32_t.getCPtr(z), vec3.getCPtr(slf), slf), true);
  }

  public static SWIGTYPE_p_int32_t dot(vec3 slf, vec3 other) {
    return new SWIGTYPE_p_int32_t(ffi_libJNI.dot(vec3.getCPtr(slf), slf, vec3.getCPtr(other), other), true);
  }

  public static vec3 cross(vec3 slf, vec3 other) {
    return new vec3(ffi_libJNI.cross(vec3.getCPtr(slf), slf, vec3.getCPtr(other), other), true);
  }

  public static vec3 normalize(vec3 slf) {
    return new vec3(ffi_libJNI.normalize(vec3.getCPtr(slf), slf), true);
  }

  public static void hello(SWIGTYPE_p_int8_t name) {
    ffi_libJNI.hello(SWIGTYPE_p_int8_t.getCPtr(name));
  }

  public static void benchmark_rust() {
    ffi_libJNI.benchmark_rust();
  }

  public static void benchmark_rust_async() {
    ffi_libJNI.benchmark_rust_async();
  }

  public static ffierror simple_service_destroy(SWIGTYPE_p_p_simpleservice context) {
    return ffierror.swigToEnum(ffi_libJNI.simple_service_destroy(SWIGTYPE_p_p_simpleservice.getCPtr(context)));
  }

  public static ffierror simple_service_new_with(SWIGTYPE_p_p_simpleservice context, SWIGTYPE_p_uint32_t some_value) {
    return ffierror.swigToEnum(ffi_libJNI.simple_service_new_with(SWIGTYPE_p_p_simpleservice.getCPtr(context), SWIGTYPE_p_uint32_t.getCPtr(some_value)));
  }

  public static ffierror vec4_destroy(SWIGTYPE_p_p_vec4 context) {
    return ffierror.swigToEnum(ffi_libJNI.vec4_destroy(SWIGTYPE_p_p_vec4.getCPtr(context)));
  }

  public static ffierror vec4_new(SWIGTYPE_p_p_vec4 context, float x, float y, float z, float w) {
    return ffierror.swigToEnum(ffi_libJNI.vec4_new(SWIGTYPE_p_p_vec4.getCPtr(context), x, y, z, w));
  }

  public static float vec4_dot(SWIGTYPE_p_vec4 context, SWIGTYPE_p_vec4 other) {
    return ffi_libJNI.vec4_dot(SWIGTYPE_p_vec4.getCPtr(context), SWIGTYPE_p_vec4.getCPtr(other));
  }

  public static void init_logger() {
    ffi_libJNI.init_logger();
  }

}
